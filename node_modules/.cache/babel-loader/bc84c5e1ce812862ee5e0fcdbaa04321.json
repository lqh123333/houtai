{"ast":null,"code":"import \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport VueRouter from \"vue-router\";\nimport Login from '../src/view/Login';\nimport Home from '../src/view/home';\nimport Welcome from '../src/view/Welcome';\nimport Users from '../src/view/Users';\nimport Perlist from '../src/view/Perlist';\nimport Roles from '../src/view/roles';\nvar router = new VueRouter({\n  routes: [{\n    path: '/',\n    redirect: '/login'\n  }, {\n    path: '/login',\n    component: Login,\n    meta: {\n      title: '登录'\n    }\n  }, {\n    path: '/home',\n    name: 'home',\n    component: Home,\n    meta: {\n      isAbout: true\n    },\n    redirect: '/welcome',\n    children: [{\n      path: '/welcome',\n      component: Welcome\n    }, {\n      path: '/users',\n      component: Users\n    }, {\n      path: '/rights',\n      component: Perlist\n    }, {\n      path: '/roles',\n      component: Roles\n    }]\n  }]\n}); //前置路由守卫\n\nrouter.beforeEach(function (to, from, next) {\n  if (to.meta.isAbout) {\n    //判断是否有token值\n    if (sessionStorage.getItem('token')) {\n      //判断token值shif和服务器传递的一直\n      var key = window.atob(sessionStorage.getItem('key'));\n      var token = sessionStorage.getItem('token');\n\n      if (key !== token) {\n        next('/login');\n        return;\n      }\n\n      next();\n    } else {\n      next('/login');\n    }\n  } else {\n    next();\n  }\n}); //后置路由守卫\n\nrouter.afterEach(function (to) {\n  document.title = to.meta.title || '后台管理系统';\n});\nexport default router;","map":{"version":3,"names":["VueRouter","Login","Home","Welcome","Users","Perlist","Roles","router","routes","path","redirect","component","meta","title","name","isAbout","children","beforeEach","to","from","next","sessionStorage","getItem","key","window","atob","token","afterEach","document"],"sources":["C:/Users/Administrator/Desktop/项目/backstage/router/index.js"],"sourcesContent":["import VueRouter from \"vue-router\";\r\n\r\nimport Login from '../src/view/Login'\r\nimport Home from '../src/view/home'\r\nimport Welcome from '../src/view/Welcome'\r\nimport Users from '../src/view/Users'\r\nimport Perlist from '../src/view/Perlist'\r\nimport Roles from '../src/view/roles'\r\nconst router = new VueRouter({\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            redirect: '/login'\r\n        },\r\n        {\r\n            path: '/login',\r\n            component: Login,\r\n            meta: { title: '登录' }\r\n        },\r\n        {\r\n            path: '/home',\r\n            name:'home',\r\n            component: Home,\r\n            meta: { isAbout: true },\r\n            redirect:'/welcome',\r\n            children:[\r\n                {\r\n                    path:'/welcome',\r\n                    component:Welcome\r\n                },\r\n                {\r\n                    path:'/users',\r\n                    component:Users\r\n                },\r\n                {\r\n                    path:'/rights',\r\n                    component:Perlist\r\n                },\r\n                {\r\n                    path:'/roles',\r\n                    component:Roles\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n})\r\n//前置路由守卫\r\nrouter.beforeEach((to, from, next) => {\r\n    if (to.meta.isAbout) {\r\n        //判断是否有token值\r\n        if (sessionStorage.getItem('token')) {\r\n            //判断token值shif和服务器传递的一直\r\n            const key = window.atob(sessionStorage.getItem('key'))\r\n            const token = sessionStorage.getItem('token')\r\n            if (key !== token) {\r\n                next('/login')\r\n                return\r\n            }\r\n                next()\r\n            \r\n           \r\n        } else {\r\n            next('/login')\r\n        }\r\n\r\n    } else {\r\n        next()\r\n    }\r\n\r\n})\r\n//后置路由守卫\r\n\r\nrouter.afterEach((to) => {\r\n    document.title = to.meta.title || '后台管理系统'\r\n\r\n})\r\n\r\nexport default router"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,IAAMC,MAAM,GAAG,IAAIP,SAAJ,CAAc;EACzBQ,MAAM,EAAE,CACJ;IACIC,IAAI,EAAE,GADV;IAEIC,QAAQ,EAAE;EAFd,CADI,EAKJ;IACID,IAAI,EAAE,QADV;IAEIE,SAAS,EAAEV,KAFf;IAGIW,IAAI,EAAE;MAAEC,KAAK,EAAE;IAAT;EAHV,CALI,EAUJ;IACIJ,IAAI,EAAE,OADV;IAEIK,IAAI,EAAC,MAFT;IAGIH,SAAS,EAAET,IAHf;IAIIU,IAAI,EAAE;MAAEG,OAAO,EAAE;IAAX,CAJV;IAKIL,QAAQ,EAAC,UALb;IAMIM,QAAQ,EAAC,CACL;MACIP,IAAI,EAAC,UADT;MAEIE,SAAS,EAACR;IAFd,CADK,EAKL;MACIM,IAAI,EAAC,QADT;MAEIE,SAAS,EAACP;IAFd,CALK,EASL;MACIK,IAAI,EAAC,SADT;MAEIE,SAAS,EAACN;IAFd,CATK,EAaL;MACII,IAAI,EAAC,QADT;MAEIE,SAAS,EAACL;IAFd,CAbK;EANb,CAVI;AADiB,CAAd,CAAf,C,CAsCA;;AACAC,MAAM,CAACU,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;EAClC,IAAIF,EAAE,CAACN,IAAH,CAAQG,OAAZ,EAAqB;IACjB;IACA,IAAIM,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAJ,EAAqC;MACjC;MACA,IAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAZ,CAAZ;MACA,IAAMI,KAAK,GAAGL,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;;MACA,IAAIC,GAAG,KAAKG,KAAZ,EAAmB;QACfN,IAAI,CAAC,QAAD,CAAJ;QACA;MACH;;MACGA,IAAI;IAGX,CAXD,MAWO;MACHA,IAAI,CAAC,QAAD,CAAJ;IACH;EAEJ,CAjBD,MAiBO;IACHA,IAAI;EACP;AAEJ,CAtBD,E,CAuBA;;AAEAb,MAAM,CAACoB,SAAP,CAAiB,UAACT,EAAD,EAAQ;EACrBU,QAAQ,CAACf,KAAT,GAAiBK,EAAE,CAACN,IAAH,CAAQC,KAAR,IAAiB,QAAlC;AAEH,CAHD;AAKA,eAAeN,MAAf"},"metadata":{},"sourceType":"module"}