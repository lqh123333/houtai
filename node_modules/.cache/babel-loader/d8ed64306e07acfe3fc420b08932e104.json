{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Administrator/Desktop/\\u9879\\u76EE/backstage/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Administrator/Desktop/\\u9879\\u76EE/backstage/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { List } from 'echarts';\nexport default {\n  data: function data() {\n    return {\n      Perlist: []\n    };\n  },\n  methods: {\n    getPer: function getPer() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get(\"/api/:type\", {\n                  params: {\n                    type: List\n                  }\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n                //   this.total = res.msg.total;\n                console.log(res); //   if (res.msg.status != 200) return this.$message.error(\"数据查询失败\");\n                //   this.Userlist = res.data;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAiBA;AACA;EACAA,IADA,kBACA;IACA;MACAC;IADA;EAGA,CALA;EAMAC;IACAC,MADA,oBACA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAC;oBACAC;kBADA;gBADA,EADA;;cAAA;gBAAA;gBACAC,GADA,yBACAN,IADA;gBAMA;gBACAO,iBAPA,CAQA;gBACA;;cATA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAUA;EAXA;AANA","names":["data","Perlist","methods","getPer","params","type","res","console"],"sourceRoot":"src/view","sources":["Perlist.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-breadcrumb separator=\"/\">\r\n      <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-table :data=\"Perlist\" style=\"width: 100%\" :border=\"true\">\r\n      <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"权限名称\"> </el-table-column>\r\n      <el-table-column prop=\"email\" label=\"路径\"> </el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"权限等级\"> </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { List } from 'echarts';\r\nexport default {\r\n  data() {\r\n    return {\r\n      Perlist: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async getPer() {\r\n      const { data: res } = await this.$http.get(\"/api/:type\", {\r\n        params: {\r\n          type:List\r\n        },\r\n      });\r\n    //   this.total = res.msg.total;\r\n      console.log(res);\r\n    //   if (res.msg.status != 200) return this.$message.error(\"数据查询失败\");\r\n    //   this.Userlist = res.data;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}